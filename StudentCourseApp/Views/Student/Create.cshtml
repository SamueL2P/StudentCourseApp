@model StudentCourseApp.Models.Student

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="~/Content/site.css" rel="stylesheet" />
</head>
<body class="p-8">

    @using (Html.BeginForm("Create", "Student", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="max-w-lg mx-auto bg-white p-6 rounded-lg shadow-md">
            <h4 class="text-xl font-semibold mb-4">Create New Student</h4>
            <hr class="mb-4" />
            @Html.ValidationSummary(true, "", new { @class = "text-red-500 mb-4" })

            <div class="mb-4">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-input w-full border border-gray-300 rounded py-2 px-3 shadow" } })
                <br />
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-red-500" })
            </div>

            <div class="mb-4">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-input w-full border border-gray-300 rounded py-2 px-3 shadow" } })
                <br />
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-red-500" })
            </div>

            <div class="mb-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-input w-full border border-gray-300 rounded py-2 px-3 shadow" } })
                <br />
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-red-500" })
            </div>

            <div class="mb-4">
                @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-input w-full border border-gray-300 rounded py-2 px-3 shadow" } })
                <br />
                @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-red-500" })
            </div>

            <div class="flex justify-between items-center">
                <input type="submit" value="Create" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded shadow-lg cursor-pointer" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded shadow-lg" })
            </div>
        </div>
    }

</body>
</html>
